package khoaphd.views;

import java.sql.Date;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import khoaphd.dtos.BillDTO;
import khoaphd.dtos.BookDTO;
import khoaphd.dtos.BookInBillDTO;
import khoaphd.dtos.DiscountDTO;
import khoaphd.models.BillDAO;
import khoaphd.models.BookDAO;
import khoaphd.models.BookInBillDAO;
import khoaphd.models.DiscountDAO;

/**
 *
 * @author KhoaPHD
 */
public class UserJFrame extends javax.swing.JFrame {

    /**
     * Creates new form UserJFrame
     */
    
    private String userID;
    private BookDAO bookDAO;
    private BillDAO billDAO;
    private BookInBillDAO bookInBillDAO;
    private DiscountDAO discountDAO;
    private DefaultTableModel modelBooks;
    private DefaultTableModel modelCart;
    private DecimalFormat df;
    
    public UserJFrame() {
        initComponents();
    }
    
    public UserJFrame(String id) {
        initComponents();
        userID = id;
        setLocationRelativeTo(null);
        setTitle("User - ID " + userID);
        lbWelcome.setText("Welcome User " + userID);
        bookDAO = new BookDAO();
        billDAO = new BillDAO();
        bookInBillDAO = new BookInBillDAO();
        discountDAO = new DiscountDAO();
        modelBooks = (DefaultTableModel)tblBooks.getModel();
        modelCart = (DefaultTableModel)tblCart.getModel();
        NumberFormat nf = NumberFormat.getNumberInstance();
        df = (DecimalFormat)nf;
        lbAfterDiscount.setVisible(false);
        try {
            discountDAO.disableExpiredCodes();
            setModelForBooks();
            setupCbDiscount();
            disableDiscountFields();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void setModelForBooks() throws Exception {
        modelBooks.setRowCount(0);
        Vector<BookDTO> list = bookDAO.getAllBooksForUser();
        double price;
        String priceStr;
        Vector v;
        for (BookDTO dto : list) {
            price = dto.getPrice();
            priceStr = df.format(price);
            v = dto.toVectorShort();
            v.add(priceStr);
            modelBooks.addRow(v);
        }
    }
    
    private int findBookByID(String id) {
        String idInTable;
        for (int i = 0; i < tblCart.getRowCount(); i++) {
            idInTable = (String)tblCart.getValueAt(i, 0);
            if (id.equalsIgnoreCase(idInTable)) {
                return i;
            }
        }
        return -1;
    }
    
    private double calculateTotal() throws Exception {
        double total = 0;
        for (int i = 0; i < tblCart.getRowCount(); i++) {
            total += df.parse((String)tblCart.getValueAt(i, 4)).doubleValue();
        }
        return total;
    }
    
    private double calculateTotalDiscount(double total, double percent) throws Exception {
        double totalDiscount = total * (100 - percent) / 100;
        return totalDiscount;
    }
    
    private void setupCbDiscount() throws Exception {
        Vector<DiscountDTO> list = discountDAO.getCodesByUserID(userID);
        cbDiscount.removeAllItems();
        for (DiscountDTO dto : list) {
            cbDiscount.addItem(dto.getDiscountID());
        }
    }
    
    private void disableDiscountFields() {
        txtDiscountID.setEditable(false);
        txtDiscountPercent.setEditable(false);
        txtExpiredDate.setEditable(false);
    }
    
    private String convertDateToString(Date date) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String s = dateFormat.format(date);
        return s;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbWelcome = new javax.swing.JLabel();
        btnViewHistory = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBooks = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        chkUseCode = new javax.swing.JCheckBox();
        cbDiscount = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtDiscountID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDiscountPercent = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtExpiredDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        lbTotal = new javax.swing.JLabel();
        lbAfterDiscount = new javax.swing.JLabel();
        lbTotalDiscount = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), java.awt.Color.blue)); // NOI18N

        lbWelcome.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lbWelcome.setForeground(java.awt.Color.blue);
        lbWelcome.setText(" ");

        btnViewHistory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnViewHistory.setText("View shopping history");
        btnViewHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHistoryActionPerformed(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbWelcome)
                .addGap(18, 18, 18)
                .addComponent(btnViewHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbWelcome)
                    .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnViewHistory))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel2.setForeground(java.awt.Color.blue);
        jLabel2.setText("All books");

        tblBooks.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Title", "Author", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBooks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblBooks);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdd.setText("Add to Cart");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemove.setText("Remove from Cart");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Quantity:");

        txtQuantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdate.setText("Update Quantity");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtQuantity)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd)
                .addGap(18, 18, 18)
                .addComponent(btnRemove)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Discount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), java.awt.Color.blue)); // NOI18N

        chkUseCode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkUseCode.setText("Use code");
        chkUseCode.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkUseCodeStateChanged(evt);
            }
        });

        cbDiscount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbDiscount.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDiscountItemStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("ID:");

        txtDiscountID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Discount:");

        txtDiscountPercent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("%");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Expired date:");

        txtExpiredDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtExpiredDate)
                    .addComponent(cbDiscount, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtDiscountPercent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkUseCode)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtDiscountID, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkUseCode)
                .addGap(18, 18, 18)
                .addComponent(cbDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDiscountID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDiscountPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtExpiredDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel8.setForeground(java.awt.Color.blue);
        jLabel8.setText("Shopping cart");

        tblCart.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Title", "Price", "Quantity", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCart.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCartMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCart);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel9.setText("Total:");

        lbTotal.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lbTotal.setForeground(java.awt.Color.blue);
        lbTotal.setText(" ");

        lbAfterDiscount.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lbAfterDiscount.setText("After discount:");

        lbTotalDiscount.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lbTotalDiscount.setForeground(java.awt.Color.blue);
        lbTotalDiscount.setText(" ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTotal))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lbAfterDiscount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTotalDiscount)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lbTotal))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAfterDiscount)
                    .addComponent(lbTotalDiscount))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnConfirm.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(150, 150, 150)))
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(322, 322, 322))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConfirm)))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            int row = tblBooks.getSelectedRow();
            if (row == -1) {
                return;
            }
            String id = (String) tblBooks.getValueAt(row, 0);
            double price = df.parse((String) tblBooks.getValueAt(row, 3)).doubleValue();
            int quantity = 1;
            double total = price * quantity;
            int pos = findBookByID(id);
            if (pos != -1) {
                quantity = (int) tblCart.getValueAt(pos, 3);
                total = price * (++quantity);
                tblCart.setValueAt(quantity, pos, 3);
                tblCart.setValueAt(df.format(total), pos, 4);
            } else {
                String title = (String) tblBooks.getValueAt(row, 1);
                Vector v = new Vector();
                v.add(id);
                v.add(title);
                v.add(df.format(price));
                v.add(quantity);
                v.add(df.format(total));
                modelCart.addRow(v);
            }
            lbTotal.setText(df.format(calculateTotal()));
            if (chkUseCode.isSelected()) {
                double percent = Double.parseDouble(txtDiscountPercent.getText());
                double totalDiscount = calculateTotalDiscount(calculateTotal(), percent);
                lbTotalDiscount.setText(df.format(totalDiscount));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        try {
            int row = tblCart.getSelectedRow();
            if (row == -1) {
                return;
            }
            int confirmation = JOptionPane.showConfirmDialog(this, "Do you want to remove this book from cart ?");
            if (confirmation != JOptionPane.YES_OPTION) {
                return;
            }
            modelCart.removeRow(row);
            lbTotal.setText(df.format(calculateTotal()));
            if (chkUseCode.isSelected()) {
                double percent = Double.parseDouble(txtDiscountPercent.getText());
                double totalDiscount = calculateTotalDiscount(calculateTotal(), percent);
                lbTotalDiscount.setText(df.format(totalDiscount));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void tblCartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCartMouseClicked
        int row = tblCart.getSelectedRow();
        int quantity = (int)tblCart.getValueAt(row, 3);
        txtQuantity.setText(Integer.toString(quantity));
    }//GEN-LAST:event_tblCartMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            int row = tblCart.getSelectedRow();
            if (row == -1) {
                return;
            }
            
            double price = df.parse((String) tblCart.getValueAt(row, 2)).doubleValue();
            int quantity;
            if (txtQuantity.getText().trim().isEmpty()) {
                quantity = 0;
            } else {
                quantity = Integer.parseInt(txtQuantity.getText().trim());
            }
            
            if (quantity < 0) {
                JOptionPane.showMessageDialog(this, "Quantity cannot be negative");
            } else if (quantity == 0) {
                btnRemoveActionPerformed(evt);
            } else {
                double total = price * quantity;
                tblCart.setValueAt(quantity, row, 3);
                tblCart.setValueAt(df.format(total), row, 4);
            }
            lbTotal.setText(df.format(calculateTotal()));
            if (chkUseCode.isSelected()) {
                double percent = Double.parseDouble(txtDiscountPercent.getText());
                double totalDiscount = calculateTotalDiscount(calculateTotal(), percent);
                lbTotalDiscount.setText(df.format(totalDiscount));
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input for quantity");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(this, "Confirm this shopping cart?");
        if (confirmation != JOptionPane.YES_OPTION) {
            return;
        }
        try {
            List<BookInBillDTO> listBook = new ArrayList<>();
            int billID = billDAO.generateNewID();
            for (int i = 0; i < tblCart.getRowCount(); i++) {
                String bookID = (String) tblCart.getValueAt(i, 0);
                int quantity = (int) tblCart.getValueAt(i, 3);
                if (bookDAO.isInStock(bookID, quantity)) {
                    double price = df.parse((String)tblCart.getValueAt(i, 2)).doubleValue();
                    double total = df.parse((String)tblCart.getValueAt(i, 4)).doubleValue();
                    BookInBillDTO bookInBillDTO = new BookInBillDTO(billID, bookID, price, quantity, total);
                    listBook.add(bookInBillDTO);
                } else {
                    JOptionPane.showMessageDialog(this, "Book ID " + bookID + " is out of stock");
                    return;
                }
            }
            
            Date buyDate = new Date(System.currentTimeMillis());
            double totalAll = df.parse(lbTotal.getText()).doubleValue();
            String discountID = null;
            double totalDiscount = totalAll;
            if (chkUseCode.isSelected()) {
                discountID = txtDiscountID.getText();
                totalDiscount = df.parse(lbTotalDiscount.getText()).doubleValue();
            }
            BillDTO billDTO = new BillDTO(billID, userID, totalAll, buyDate, discountID, totalDiscount);
            
            boolean resultInsertBill = billDAO.insert(billDTO);
            boolean resultInsertBook = false, resultUpdateStock = false;
            for (BookInBillDTO dto : listBook) {
                resultInsertBook = bookInBillDAO.insert(dto);
                resultUpdateStock = bookDAO.updateStock(dto.getBookID(), dto.getQuantity());
                if (!resultInsertBook || !resultUpdateStock) {
                    break;
                }
            }
            if (resultInsertBill && resultInsertBook && resultUpdateStock) {
                JOptionPane.showMessageDialog(this, "Shopping succeed");
                setModelForBooks();
                if (chkUseCode.isSelected()) {
                    discountDAO.disable(discountID);
                    setupCbDiscount();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Shopping failed");
            }
        } catch (Exception e) {
            if (e.getMessage().contains("duplicate")) {
                JOptionPane.showMessageDialog(this, "ID duplicated");
            } else {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(this, "Do you want to logout?");
        if (confirmation == JOptionPane.YES_OPTION) {
            new LoginJFrame().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void chkUseCodeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkUseCodeStateChanged
        if (chkUseCode.isSelected()) {
            lbAfterDiscount.setVisible(true);
            lbTotalDiscount.setVisible(true);
            double percent = Double.parseDouble(txtDiscountPercent.getText());
            double totalDiscount = 0.0;
            try {
                totalDiscount = calculateTotalDiscount(calculateTotal(), percent);
            } catch (Exception e) {
                e.printStackTrace();
            }
            lbTotalDiscount.setText(df.format(totalDiscount));
        } else {
            lbAfterDiscount.setVisible(false);
            lbTotalDiscount.setVisible(false);
        }
    }//GEN-LAST:event_chkUseCodeStateChanged

    private void cbDiscountItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDiscountItemStateChanged
        try {
            DiscountDTO dto = discountDAO.getCodeByID((String)cbDiscount.getSelectedItem());
            txtDiscountID.setText(dto.getDiscountID());
            txtDiscountPercent.setText(Double.toString(dto.getPercent()));
            txtExpiredDate.setText(convertDateToString(dto.getExpiredDate()));
            if (chkUseCode.isSelected()) {
                double percent = Double.parseDouble(txtDiscountPercent.getText());
                double totalDiscount = calculateTotalDiscount(calculateTotal(), percent);
                lbTotalDiscount.setText(df.format(totalDiscount));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cbDiscountItemStateChanged

    private void btnViewHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHistoryActionPerformed
        new HistoryJFrame(userID).setVisible(true);
    }//GEN-LAST:event_btnViewHistoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnViewHistory;
    private javax.swing.JComboBox<String> cbDiscount;
    private javax.swing.JCheckBox chkUseCode;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbAfterDiscount;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JLabel lbTotalDiscount;
    private javax.swing.JLabel lbWelcome;
    private javax.swing.JTable tblBooks;
    private javax.swing.JTable tblCart;
    private javax.swing.JTextField txtDiscountID;
    private javax.swing.JTextField txtDiscountPercent;
    private javax.swing.JTextField txtExpiredDate;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
