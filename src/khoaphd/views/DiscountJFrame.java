package khoaphd.views;

import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import khoaphd.dtos.AccountDTO;
import khoaphd.dtos.DiscountDTO;
import khoaphd.models.AccountDAO;
import khoaphd.models.DiscountDAO;

/**
 *
 * @author KhoaPHD
 */
public class DiscountJFrame extends javax.swing.JFrame {

    /**
     * Creates new form DiscountJFrame
     */
    private AccountDAO accountDAO;
    private DiscountDAO discountDAO;
    private DefaultTableModel modelUsers;
    private DefaultTableModel modelCodes;
    
    public DiscountJFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Discount");
        accountDAO = new AccountDAO();
        discountDAO = new DiscountDAO();
        modelUsers = (DefaultTableModel)tblUsers.getModel();
        modelCodes = (DefaultTableModel)tblCodes.getModel();
        try {
            discountDAO.disableExpiredCodes();
            setModelForUsers();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void setModelForUsers() throws Exception {
        modelUsers.setRowCount(0);
        Vector<AccountDTO> list = accountDAO.getAllUserRole();
        for (AccountDTO dto : list) {
            modelUsers.addRow(dto.toVector());
        }
    }
    
    private void setModelForCodes(String userID) throws Exception {
        modelCodes.setRowCount(0);
        Vector<DiscountDTO> list = discountDAO.getCodesByUserID(userID);
        for (DiscountDTO dto : list) {
            modelCodes.addRow(dto.toVector());
        }
    }
    
    private String convertDateToString(Date date) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String s = dateFormat.format(date);
        return s;
    }
    
    private Date convertStringToDate(String dateStr) throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        dateFormat.setLenient(false);
        java.util.Date date = dateFormat.parse(dateStr);
        Date sqlDate = new Date(date.getTime());
        return sqlDate;
    }
    
    private boolean validateAll() {
        String id = txtDiscountID.getText().trim().toUpperCase();
        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID is empty");
            txtDiscountID.requestFocus();
            return false;
        }
        if (!id.matches("^D\\d{4}$")) {
            JOptionPane.showMessageDialog(this, "ID must follow the format like D0000");
            txtDiscountID.requestFocus();
            return false;
        }
        
        double percent = 0.0;
        try {
            percent = Double.parseDouble(txtDiscountPercent.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please input a valid float number for percent");
            txtDiscountPercent.requestFocus();
            return false;
        }
        if (percent <= 0) {
            JOptionPane.showMessageDialog(this, "Price must be positive");
            txtDiscountPercent.requestFocus();
            return false;
        }
        
        String expiredDateStr = txtExpiredDate.getText().trim();
        if (!expiredDateStr.matches("^\\d{4}-\\d{2}-\\d{2}$")) {
            JOptionPane.showMessageDialog(this, "Date must follow the format YYYY-MM-DD");
            txtExpiredDate.requestFocus();
            return false;
        }
        Date currentDate = new Date(System.currentTimeMillis());
        Date expiredDate = null;
        try {
            expiredDate = convertStringToDate(expiredDateStr);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Invalid date");
            txtExpiredDate.requestFocus();
            return false;
        }
        if (expiredDate.compareTo(currentDate) < 0) {
            JOptionPane.showMessageDialog(this, "Expired date cannot be before current date");
            txtExpiredDate.requestFocus();
            return false;
        }
        
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCodes = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtDiscountID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDiscountPercent = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtExpiredDate = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setForeground(java.awt.Color.blue);
        jLabel1.setText("All Users");

        tblUsers.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Fullname"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsers);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setForeground(java.awt.Color.blue);
        jLabel2.setText("Discount codes");

        tblCodes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblCodes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Discount ID", "Discount Percent", "Expired date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCodes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCodes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCodesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCodes);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Discount ID:");

        txtDiscountID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Discount percent:");

        txtDiscountPercent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("%");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Expired date:");

        txtExpiredDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(46, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDiscountPercent)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6))
                            .addComponent(txtDiscountID)
                            .addComponent(txtExpiredDate))
                        .addGap(25, 25, 25))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDiscountID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDiscountPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtExpiredDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnInsert))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsersMouseClicked
        int row = tblUsers.getSelectedRow();
        if (row == -1) {
            return;
        }
        String id = (String)tblUsers.getValueAt(row, 0);
        try {
            setModelForCodes(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblUsersMouseClicked

    private void tblCodesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCodesMouseClicked
        int row = tblCodes.getSelectedRow();
        if (row == -1) {
            return;
        }
        txtDiscountID.setText((String)tblCodes.getValueAt(row, 0));
        txtDiscountPercent.setText(Double.toString((double)tblCodes.getValueAt(row, 1)));
        txtExpiredDate.setText(convertDateToString((Date)tblCodes.getValueAt(row, 2)));
    }//GEN-LAST:event_tblCodesMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtDiscountID.setText("");
        txtDiscountPercent.setText("");
        txtExpiredDate.setText("");
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        if (!validateAll()) {
            return;
        }
        
        String discountID = txtDiscountID.getText().trim().toUpperCase();
        int row = tblUsers.getSelectedRow();
        String userID = (String)tblUsers.getValueAt(row, 0);
        int confirmation = JOptionPane.showConfirmDialog(this, "Do you want to insert code "
                + discountID + " to user " + userID + "?");
        if (confirmation != JOptionPane.YES_OPTION) {
            return;
        }
        
        try {
            double percent = Double.parseDouble(txtDiscountPercent.getText().trim());
            Date expiredDate = convertStringToDate(txtExpiredDate.getText().trim());
            DiscountDTO dto = new DiscountDTO(discountID, userID, percent, expiredDate);
            boolean result = discountDAO.insert(dto);
            if (result) {
                JOptionPane.showMessageDialog(this, "Insert succeed");
                setModelForCodes(userID);
            } else {
                JOptionPane.showMessageDialog(this, "Insert failed");
            }
        } catch (Exception e) {
            if (e.getMessage().contains("duplicate")) {
                JOptionPane.showMessageDialog(this, "ID already existed");
                txtDiscountID.requestFocus();
            } else {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiscountJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiscountJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiscountJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiscountJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DiscountJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnNew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblCodes;
    private javax.swing.JTable tblUsers;
    private javax.swing.JTextField txtDiscountID;
    private javax.swing.JTextField txtDiscountPercent;
    private javax.swing.JTextField txtExpiredDate;
    // End of variables declaration//GEN-END:variables
}
